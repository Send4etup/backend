# complete_fix.py - –ü–û–õ–ù–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –í–°–ï–• –ò–ú–ü–û–†–¢–û–í
"""
–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –Ω–∞–π–¥–µ—Ç –∏ –∏—Å–ø—Ä–∞–≤–∏—Ç –í–°–ï –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ –∏–º–ø–æ—Ä—Ç—ã –≤ –ø—Ä–æ–µ–∫—Ç–µ
"""
import os
import re
from pathlib import Path

def fix_all_imports():
    """–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç –≤—Å–µ –∏–º–ø–æ—Ä—Ç—ã –≤ –ø—Ä–æ–µ–∫—Ç–µ"""
    
    # –ü–æ–∏—Å–∫ –≤—Å–µ—Ö .py —Ñ–∞–π–ª–æ–≤
    project_root = Path(".")
    python_files = []
    
    # –ü–æ–∏—Å–∫ –≤ app/ –∏ scripts/
    for pattern in ["app/**/*.py", "scripts/**/*.py", "*.py"]:
        python_files.extend(project_root.glob(pattern))
    
    # –ü–∞—Ç—Ç–µ—Ä–Ω—ã –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è (–ø–æ—Ä—è–¥–æ–∫ –≤–∞–∂–µ–Ω!)
    patterns_to_fix = [
        # –û—Å–Ω–æ–≤–Ω—ã–µ –º–æ–¥—É–ª–∏ –±–µ–∑ app.
        (r"^from database import", "from app.database import"),
        (r"^from config import", "from app.config import"),
        (r"^from models import", "r!from app.models import"),
        (r"^from dependencies import", "from app.dependencies import"),
        (r"^from startup import", "from app.startup import"),
        
        # –°–µ—Ä–≤–∏—Å—ã –±–µ–∑ app.
        (r"^from services\.(\w+) import", r"from app.services.\1 import"),
        (r"^from user_service import", "from app.services.user_service import"),
        (r"^from chat_service import", "from app.services.chat_service import"),
        (r"^from file_service import", "from app.services.file_service import"),
        (r"^from ai_service import", "from app.services.ai_service import"),
        
        # –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏ –±–µ–∑ app.
        (r"^from repositories\.(\w+) import", r"from app.repositories.\1 import"),
        (r"^from user_repository import", "from app.repositories.user_repository import"),
        (r"^from chat_repository import", "from app.repositories.chat_repository import"),
        (r"^from message_repository import", "from app.repositories.message_repository import"),
        (r"^from attachment_repository import", "from app.repositories.attachment_repository import"),
        (r"^from base_repository import", "from app.repositories.base_repository import"),
        
        # –û—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–µ –∏–º–ø–æ—Ä—Ç—ã —Å —Ç–æ—á–∫–æ–π
        (r"^from \.database import", "from app.database import"),
        (r"^from \.config import", "from app.config import"),
        (r"^from \.models import", "from app.models import"),
        (r"^from \.services\.(\w+) import", r"from app.services.\1 import"),
        (r"^from \.repositories\.(\w+) import", r"from app.repositories.\1 import"),
    ]
    
    fixed_files = []
    
    for file_path in python_files:
        if not file_path.exists():
            continue
            
        try:
            with open(file_path, 'r', encoding='utf-8') as f:
                lines = f.readlines()
            
            original_lines = lines.copy()
            
            # –ü—Ä–∏–º–µ–Ω—è–µ–º –ø–∞—Ç—Ç–µ—Ä–Ω—ã –ø–æ—Å—Ç—Ä–æ—á–Ω–æ
            for i, line in enumerate(lines):
                for pattern, replacement in patterns_to_fix:
                    lines[i] = re.sub(pattern, replacement, line)
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –±—ã–ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è
            if lines != original_lines:
                with open(file_path, 'w', encoding='utf-8') as f:
                    f.writelines(lines)
                fixed_files.append(str(file_path))
                print(f"‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω: {file_path}")
        
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ñ–∞–π–ª–µ {file_path}: {e}")
    
    return fixed_files

def create_missing_files():
    """–°–æ–∑–¥–∞–µ—Ç –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ —Ñ–∞–π–ª—ã"""
    
    # __init__.py —Ñ–∞–π–ª—ã
    init_files = [
        "app/__init__.py",
        "app/services/__init__.py", 
        "app/repositories/__init__.py"
    ]
    
    for init_file in init_files:
        path = Path(init_file)
        if not path.exists():
            path.parent.mkdir(parents=True, exist_ok=True)
            path.touch()
            print(f"‚úÖ –°–æ–∑–¥–∞–Ω: {init_file}")
        else:
            print(f"‚ú® –£–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {init_file}")

def check_structure():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø—Ä–æ–µ–∫—Ç–∞"""
    print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞:")
    
    required_files = [
        "app/__init__.py",
        "app/config.py",
        "app/database.py", 
        "app/models.py",
        "app/main.py",
        "app/dependencies.py",
        "app/services/__init__.py",
        "app/repositories/__init__.py"
    ]
    
    missing_files = []
    
    for file_path in required_files:
        path = Path(file_path)
        if path.exists():
            print(f"‚úÖ {file_path}")
        else:
            print(f"‚ùå {file_path} - –û–¢–°–£–¢–°–¢–í–£–ï–¢!")
            missing_files.append(file_path)
    
    return missing_files

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üîß –ü–û–õ–ù–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ü–†–û–ï–ö–¢–ê –¢–û–í–ê–†–ò–©–ë–û–¢")
    print("=" * 60)
    
    # 1. –°–æ–∑–¥–∞–µ–º –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ —Ñ–∞–π–ª—ã
    print("\n1. –°–æ–∑–¥–∞–Ω–∏–µ __init__.py —Ñ–∞–π–ª–æ–≤:")
    create_missing_files()
    
    # 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É
    print("\n2. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã:")
    missing = check_structure()
    
    if missing:
        print(f"\n‚ö†Ô∏è  –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç —Ñ–∞–π–ª—ã: {len(missing)}")
        for file in missing:
            print(f"   - {file}")
        print("\n–°–æ–∑–¥–∞–π—Ç–µ —ç—Ç–∏ —Ñ–∞–π–ª—ã –∏–ª–∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ: python scripts/quick_fix.py")
    
    # 3. –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –∏–º–ø–æ—Ä—Ç—ã
    print("\n3. –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏–º–ø–æ—Ä—Ç–æ–≤:")
    fixed_files = fix_all_imports()
    
    if fixed_files:
        print(f"\nüéâ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: {len(fixed_files)}")
    else:
        print("\n‚ú® –í—Å–µ –∏–º–ø–æ—Ä—Ç—ã —É–∂–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã")
    
    print("\n" + "=" * 60)
    print("üöÄ –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å:")
    print("   python run.py")
    print("\nüí° –ï—Å–ª–∏ –æ—à–∏–±–∫–∏ –ø—Ä–æ–¥–æ–ª–∂–∞—é—Ç—Å—è, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ:")
    print("   1. –í—Å–µ –ª–∏ —Ñ–∞–π–ª—ã —Å–æ–∑–¥–∞–Ω—ã")
    print("   2. –ü—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –ø—É—Ç–µ–π –≤ –∏–º–ø–æ—Ä—Ç–∞—Ö")
    print("   3. –°–∏–Ω—Ç–∞–∫—Å–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏ –≤ Python –∫–æ–¥–µ")

if __name__ == "__main__":
    main()

# =====================================================
# –†–£–ß–ù–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï (–µ—Å–ª–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª–æ)
# =====================================================

"""
–ù–ê–ô–î–ò–¢–ï –ò –ó–ê–ú–ï–ù–ò–¢–ï –í –§–ê–ô–õ–ê–•:

1. –í –õ–Æ–ë–´–• .py —Ñ–∞–π–ª–∞—Ö –∑–∞–º–µ–Ω–∏—Ç–µ:
   from database import     ‚Üí from app.database import
   from config import       ‚Üí from app.config import
   from models import       ‚Üí from app.models import
   from dependencies import ‚Üí from app.dependencies import

2. –í —Ñ–∞–π–ª–∞—Ö —Å–µ—Ä–≤–∏—Å–æ–≤:
   from user_service import     ‚Üí from app.services.user_service import
   from chat_service import     ‚Üí from app.services.chat_service import
   from file_service import     ‚Üí from app.services.file_service import
   from ai_service import       ‚Üí from app.services.ai_service import

3. –í —Ñ–∞–π–ª–∞—Ö —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–≤:
   from user_repository import     ‚Üí from app.repositories.user_repository import
   from chat_repository import     ‚Üí from app.repositories.chat_repository import
   from base_repository import     ‚Üí from app.repositories.base_repository import

4. –û—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–µ –∏–º–ø–æ—Ä—Ç—ã:
   from .database import    ‚Üí from app.database import
   from .config import      ‚Üí from app.config import
   from .models import      ‚Üí from app.models import

–°–ê–ú–´–ï –í–ï–†–û–Ø–¢–ù–´–ï –§–ê–ô–õ–´ –° –û–®–ò–ë–ö–ê–ú–ò:
- app/main.py
- app/dependencies.py  
- app/services/user_service.py
- app/services/chat_service.py
- app/repositories/user_repository.py
- scripts/migrate_to_sqlite.py
"""